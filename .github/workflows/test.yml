name: Test

on: [push, pull_request]

env:
  BMI_VERSION: 1_2

jobs:
  build-on-unix:

    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    env:
      SHLIB_EXT: ${{ matrix.os == 'ubuntu-latest' && '.so' || '.dylib' }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
 
    steps:
      - uses: actions/checkout@v4

      - uses: mamba-org/setup-micromamba@v2
        with:
          micromamba-version: latest
          environment-name: testing
          create-args: >-
            make
            cmake
            pkg-config
            fortran-compiler

      - name: Configure project
        run: cmake -B _build -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_BUILD_TYPE=Release

      - name: Build and install
        run: cmake --build _build --target install --config Release

      - name: Test
        run: |
          test -h $CONDA_PREFIX/lib/libbmigiplf${{ env.SHLIB_EXT }}
          ctest --test-dir _build

  build-on-windows:

    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    runs-on: windows-latest

    env:
      LIBRARY_PREFIX: $env:CONDA_PREFIX\Library

    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: mamba-org/setup-micromamba@v2
        with:
          micromamba-version: latest
          environment-name: testing
          create-args: >-
            cmake
            pkg-config
            cxx-compiler
            fortran-compiler
          init-shell: >-
            powershell

      - name: Set the FC environment variable to the Fortran conda compiler
        run: |
          echo "FC=$CONDA_PREFIX/Library/bin/flang-new.exe" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Configure, build, and install project
        run: |
          cmake -B _build -G "NMake Makefiles" -DCMAKE_INSTALL_PREFIX="${{ env.LIBRARY_PREFIX }}" -DCMAKE_BUILD_TYPE=Release
          cmake --build _build --target install --config Release

      - name: Test
        run: |
          if ( -not ( Test-Path -Path ${{ env.LIBRARY_PREFIX }}\lib\libbmigiplf.dll.a ) ){ exit 1 }
          if ( -not ( Test-Path -Path ${{ env.LIBRARY_PREFIX }}\bin\libbmigiplf.dll ) ){ exit 1 }
          ctest --test-dir _build
